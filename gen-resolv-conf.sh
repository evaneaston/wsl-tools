#!/usr/bin/env bash
set -euo pipefail


SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
SCRIPT_FULL_PATH=${SCRIPT_DIR}/$(basename ${BASH_SOURCE[0]})
COMMAND_DIR=$( cd -- "$( dirname -- "${0}" )" &> /dev/null && pwd )
COMMAND_FULL_PATH=${COMMAND_DIR}/$(basename ${0})
POWERSHELL="/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe"

. ${SCRIPT_DIR}/common.sh
verifyExecutablePresent netmask
verifyExecutablePresent ${POWERSHELL}
echo >&5

tmp=`mktemp`

removeTempFiles() {
    rm -f $tmp
}

ctrlC() {
    echo
    echo "Trapped Ctrl-C, removing temporary files"
    removeTempFiles
    stty sane
}

trap ctrlC INT

echo >&5 "Creating new resolv.conf"
echo >&5 "--------------------------------"
{
    echo "# Generated by ${SCRIPT_FULL_PATH} (run via ${COMMAND_FULL_PATH})"
    echo "# add the following two lines to /etc/wsl.conf to keep wsl from overwriting it"
    echo "#"
    echo "#   [network]"
    echo "#   generateResolvConf = false"
    echo
    echo "# Windows' ipv4 DNS servers in interface priority"

    # get interfaces IPv4 addresses in increasing interface metric priority
    nameservers=$(${POWERSHELL} -Command "Get-DnsClientServerAddress -AddressFamily ipv4  -InterfaceIndex  (Get-NetIpInterface -AddressFamily IPV4 | sort-object InterfaceMetric).ifIndex | Select-Object -ExpandProperty ServerAddresses")
    for i in $nameservers; do
        echo nameserver $i
    done
    echo

    # always add the WSL virtual adapter gateway
    echo "# WSL vEthernet gateway"
    wslGateway=$(netmask $(ip addr show dev eth0 | grep "inet "| sed -e 's: *inet ::' | sed -e 's: .*::') | tr -d ' ' | sed -e 's:\.0/.*:.1:')
    echo nameserver=${wslGateway}
} | tr -d '\r' | tee $tmp >&5
echo >&5 "--------------------------------"
echo >&5

sudoSyncFile "$tmp" "/etc/resolv.conf"
removeTempFiles
